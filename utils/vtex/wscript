#! /usr/bin/env python
# encoding: utf-8

from waflib import Utils
import os

top = '.'
PROJECT_NAME = 'vtex_dll'

def options(opt):
	# stub
	return

def configure(conf):
	conf.define('VTEX_DLL', 1)
	conf.define('UTILS', 1)
	conf.define('VTEX_DLL_EXPORTS', 1)
	conf.define('PROTECTED_THINGS_DISABLE', 1)


def build(bld):
	source = [
		'../common/cmdlib.cpp',
		'../../public/filesystem_helpers.cpp',
		'../../public/filesystem_init.cpp',
		'../common/filesystem_tools.cpp',
		'vtex.cpp',
		'../../common/imageutils.cpp'
	]

	includes = [
		'.',
		'../../public',
		'../../public/tier0',
		'../../public/tier1',
		'../common',
		'../../common',
		'../../thirdparty'
	]

	defines = []

	libs = ['tier0', 'tier1', 'bitmap', 'tier2', 'vstdlib', 'mathlib', 'vtf', 'JPEG', 'PNG', 'ZLIB']

	if bld.env.DEST_OS == 'win32':
		libs += ['USER32','GDI32']

	install_path = bld.env.LIBDIR

	bld.shlib(
		source   = source,
		target   = PROJECT_NAME,
		name     = PROJECT_NAME,
		features = 'c cxx',
		includes = includes,
		defines  = defines,
		use      = libs,
		install_path = install_path,
		subsystem = bld.env.MSVC_SUBSYSTEM,
		idx      = bld.get_taskgen_count()
	)

